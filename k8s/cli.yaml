apiVersion: apps/v1
kind: Deployment
metadata:
  name: <org-name>-cli
spec:
  replicas: 1
  selector:
    matchLabels:
      app: <org-name>-cli
  template:
    metadata:
      labels:
        app: <org-name>-cli
    spec:
      hostname: <org-name>-cli-pod
      containers:
        - name: <org-name>-cli
          image: hyperledger/fabric-tools:2.5
          ports:
            - containerPort: 7055
          volumeMounts:
            - mountPath: /tmp/hyperledger/<org-name>/<peer-name>
              name: <org-name>-<peer-name>-volume
            - mountPath: /host/var/run
              name: <org-name>-docker-volume
            - mountPath: /tmp/hyperledger/<org-name>/admin/msp
              name: <org-name>-admin-<peer-name>-volume
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/<org-name>/<peer-name>
          env:
            - name: GO_PATH
              value: "/opt/gopath"
            - name: CORE_PEER_ID
              value: "<org-name>-cli"
            - name: CORE_PEER_ADDRESS
              value: "<org-name>-<peer-name>:<peer-port>"
            - name: CORE_PEER_LOCALMSPID
              value: "<org-name>-msp"
            - name: CORE_PEER_MSPCONFIGPATH
              value: "/tmp/hyperledger/<org-name>/admin/msp"
            - name: CORE_PEER_TLS_ENABLED
              value: "true"
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: "/tmp/hyperledger/<org-name>/<peer-name>/tls/cacerts/cert.pem"
            - name: CORE_VM_ENDPOINT
              value: "unix:///host/var/run/docker.sock"
          command: ["sh"]
          tty: true
          stdin: true
      volumes:
        - name: <org-name>-<peer-name>-volume
          hostPath:
            path: <peer-dir>
            type: Directory
        - name: <org-name>-docker-volume
          hostPath:
            path: /var/run
            type: Directory
        - name: <org-name>-admin-<peer-name>-volume
          hostPath:
            path: <admin-dir>
            type: Directory
